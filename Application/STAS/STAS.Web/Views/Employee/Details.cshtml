@model STAS.Web.Models.EmployeeWithScans
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


@{
    ViewData["Title"] = "Details";
    var userRole = HttpContextAccessor.HttpContext.Session.GetString("Role");
    bool isAdmin = (userRole == "Administrator");
}

<div class="col-md-12">
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger text-center">
            @TempData["Error"]
        </div>
    }
</div>


<div class="col-md-12">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success text-center">
            @TempData["Success"]
        </div>
    }
</div>

<h1>Employee Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Employee.EmployeeId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Employee.EmployeeId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Employee.EmployeeNumber)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Employee.EmployeeNumber)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Employee.FirstName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Employee.FirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Employee.MiddleInitial)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Employee.MiddleInitial)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Employee.LastName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Employee.LastName)
        </dd>
    </dl>
</div>


    @if (Model.Scans!.Count == 0)
    {
        <h4 class="text-center text-warning">This employee does not have scans.</h4>
    }

<div class="col-md-12">
    <div style="max-height: 350px; overflow-y: auto;">

    @if (Model.Scans!.Count != 0)
    {
    <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Scans![0].ScanId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scans![0].ScanDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scans![0].ScanType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Scans)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ScanId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScanDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScanType)
                </td>
                @if (isAdmin)
                {
                <td>
                    <div style="display: flex; gap: 5px;">
                        <div class="btn btn-warning">@Html.ActionLink("Edit", "Edit", "Scan", new { id = item.ScanId }, new { style = "text-decoration: none;" })</div>
                    </div>
                </td>
                }
            </tr>
        }
        </tbody>
    </table>
    }
    </div>
</div>

<div class="pt-4">
    @if (isAdmin)
     {
        @Html.ActionLink("Create Scan", "Create", "Scan", new { id = Model.Employee.EmployeeId }, new { @class = "btn btn-success", style = "text-decoration: none;" })
        @Html.ActionLink("Edit", "Edit", new { id = Model.Employee.EmployeeId }, new { @class = "btn btn-warning", style = "text-decoration: none;" })
     }
    <a class="btn btn-info" asp-action="Index">Back to List</a>
</div>
